// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef LIBRARY_IXX
#define LIBRARY_IXX

// Begin prologue.
//
//
// End prologue.

namespace library
{
  // isbn
  //

  // title
  //

  inline
  bool title::
  lang_present () const
  {
    return this->lang_present_;
  }

  inline
  void title::
  lang_present (bool x)
  {
    this->lang_present_ = x;
  }

  inline
  const ::std::string& title::
  lang () const
  {
    return this->lang_;
  }

  inline
  ::std::string& title::
  lang ()
  {
    return this->lang_;
  }

  inline
  void title::
  lang (const ::std::string& x)
  {
    this->lang_ = x;
    this->lang_present_ = true;
  }

  // genre
  //

  inline
  genre::
  genre ()
  {
  }

  inline
  genre::
  genre (value_type v)
  {
    value_ = v;
  }

  inline
  void genre::
  value (value_type v)
  {
    value_ = v;
  }

  // author
  //

  inline
  const ::std::string& author::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& author::
  name ()
  {
    return this->name_;
  }

  inline
  void author::
  name (const ::std::string& x)
  {
    this->name_ = x;
  }

  inline
  const ::xml_schema::date& author::
  born () const
  {
    return this->born_;
  }

  inline
  ::xml_schema::date& author::
  born ()
  {
    return this->born_;
  }

  inline
  void author::
  born (const ::xml_schema::date& x)
  {
    this->born_ = x;
  }

  inline
  bool author::
  died_present () const
  {
    return this->died_present_;
  }

  inline
  void author::
  died_present (bool x)
  {
    this->died_present_ = x;
  }

  inline
  const ::xml_schema::date& author::
  died () const
  {
    return this->died_;
  }

  inline
  ::xml_schema::date& author::
  died ()
  {
    return this->died_;
  }

  inline
  void author::
  died (const ::xml_schema::date& x)
  {
    this->died_ = x;
    this->died_present_ = true;
  }

  // book
  //

  inline
  bool book::
  available_default () const
  {
    return this->available_ == available_default_value ();
  }

  inline
  void book::
  available_default (bool x)
  {
    if (x)
      this->available_ = available_default_value ();
  }

  inline
  bool book::
  available () const
  {
    return this->available_;
  }

  inline
  bool& book::
  available ()
  {
    return this->available_;
  }

  inline
  void book::
  available (bool x)
  {
    this->available_ = x;
  }

  inline
  const ::library::isbn& book::
  isbn () const
  {
    return this->isbn_;
  }

  inline
  ::library::isbn& book::
  isbn ()
  {
    return this->isbn_;
  }

  inline
  void book::
  isbn (const ::library::isbn& x)
  {
    this->isbn_ = x;
  }

  inline
  const ::library::title& book::
  title () const
  {
    return this->title_;
  }

  inline
  ::library::title& book::
  title ()
  {
    return this->title_;
  }

  inline
  void book::
  title (const ::library::title& x)
  {
    this->title_ = x;
  }

  inline
  const ::library::genre& book::
  genre () const
  {
    return this->genre_;
  }

  inline
  ::library::genre& book::
  genre ()
  {
    return this->genre_;
  }

  inline
  void book::
  genre (const ::library::genre& x)
  {
    this->genre_ = x;
  }

  inline
  const book::author_sequence& book::
  author () const
  {
    return this->author_;
  }

  inline
  book::author_sequence& book::
  author ()
  {
    return this->author_;
  }

  // catalog
  //

  inline
  const catalog::book_sequence& catalog::
  book () const
  {
    return this->book_;
  }

  inline
  catalog::book_sequence& catalog::
  book ()
  {
    return this->book_;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // LIBRARY_IXX
