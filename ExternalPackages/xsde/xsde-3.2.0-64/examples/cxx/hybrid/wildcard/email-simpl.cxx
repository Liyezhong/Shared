// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "email-simpl.hxx"

#include <xsde/cxx/serializer/validating/string-common.hxx>

namespace email
{
  // binary_simpl
  //

  binary_simpl::
  binary_simpl ()
  : binary_sskel (&base_impl_)
  {
  }

  void binary_simpl::
  pre (const ::email::binary& x)
  {
    this->base_impl_.pre (&x);
    this->binary_simpl_state_.binary_ = &x;
  }

  ::std::string binary_simpl::
  name ()
  {
    return this->binary_simpl_state_.binary_->name ();
  }

  ::std::string binary_simpl::
  mime ()
  {
    return this->binary_simpl_state_.binary_->mime ();
  }

  // envelope_base_simpl
  //

  void envelope_base_simpl::
  pre (const ::email::envelope& x)
  {
    this->envelope_base_simpl_state_.envelope_ = &x;
  }

  ::std::string envelope_base_simpl::
  to ()
  {
    return this->envelope_base_simpl_state_.envelope_->to ();
  }

  ::std::string envelope_base_simpl::
  from ()
  {
    return this->envelope_base_simpl_state_.envelope_->from ();
  }

  ::std::string envelope_base_simpl::
  subject ()
  {
    return this->envelope_base_simpl_state_.envelope_->subject ();
  }
}

namespace email
{
  // text_saggr
  //

  text_saggr::
  text_saggr ()
  {
  }

  const char* text_saggr::
  root_name ()
  {
    return "text";
  }

  const char* text_saggr::
  root_namespace ()
  {
    return "http://www.codesynthesis.com/email";
  }

  // binary_saggr
  //

  binary_saggr::
  binary_saggr ()
  {
    this->binary_s_.serializers (this->string_s_,
                                 this->string_s_);
  }

  const char* binary_saggr::
  root_name ()
  {
    return "binary";
  }

  const char* binary_saggr::
  root_namespace ()
  {
    return "http://www.codesynthesis.com/email";
  }

  // message_saggr
  //

  message_saggr::
  message_saggr ()
  {
    this->envelope_s_.serializers (this->string_s_,
                                   this->string_s_,
                                   this->string_s_);
  }

  const char* message_saggr::
  root_name ()
  {
    return "message";
  }

  const char* message_saggr::
  root_namespace ()
  {
    return "http://www.codesynthesis.com/email";
  }
}

// Begin epilogue.
//
//
// End epilogue.

