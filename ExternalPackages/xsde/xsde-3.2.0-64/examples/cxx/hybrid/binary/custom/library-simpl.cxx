// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "library-simpl.hxx"

#include <xsde/cxx/serializer/validating/string-common.hxx>

namespace library
{
  // isbn_simpl
  //

  isbn_simpl::
  isbn_simpl ()
  : isbn_sskel (&base_impl_)
  {
  }

  void isbn_simpl::
  pre (const ::library::isbn& x)
  {
    this->base_impl_.pre (x);
  }

  // title_simpl
  //

  title_simpl::
  title_simpl ()
  : title_sskel (&base_impl_)
  {
  }

  void title_simpl::
  pre (const ::library::title& x)
  {
    this->base_impl_.pre (x);
    this->title_simpl_state_.title_ = &x;
  }

  bool title_simpl::
  lang_present ()
  {
    return this->title_simpl_state_.title_->lang_present ();
  }

  ::std::string title_simpl::
  lang ()
  {
    return this->title_simpl_state_.title_->lang ();
  }

  // genre_simpl
  //

  genre_simpl::
  genre_simpl ()
  : genre_sskel (0)
  {
  }

  void genre_simpl::
  pre (const ::library::genre& x)
  {
    this->genre_simpl_state_ = &x;
  }

  void genre_simpl::
  _serialize_content ()
  {
    if (::xsde::cxx::serializer::validating::string_common::validate_facets (
          this->genre_simpl_state_->string (),
          this->_facets (),
          this->_context ()))
      this->_characters (this->genre_simpl_state_->string ());
  }

  // author_simpl
  //

  void author_simpl::
  pre (const ::library::author& x)
  {
    this->author_simpl_state_.author_ = &x;
  }

  ::std::string author_simpl::
  name ()
  {
    return this->author_simpl_state_.author_->name ();
  }

  ::xml_schema::date author_simpl::
  born ()
  {
    return this->author_simpl_state_.author_->born ();
  }

  bool author_simpl::
  died_present ()
  {
    return this->author_simpl_state_.author_->died_present ();
  }

  ::xml_schema::date author_simpl::
  died ()
  {
    return this->author_simpl_state_.author_->died ();
  }

  // book_simpl
  //

  void book_simpl::
  pre (const ::library::book& x)
  {
    this->book_simpl_state_.book_ = &x;
    this->book_simpl_state_.author_ = 
    this->book_simpl_state_.book_->author ().begin ();
    this->book_simpl_state_.author_end_ = 
    this->book_simpl_state_.book_->author ().end ();
  }

  bool book_simpl::
  available_present ()
  {
    return true;
  }

  bool book_simpl::
  available ()
  {
    return this->book_simpl_state_.book_->available ();
  }

  const ::library::isbn& book_simpl::
  isbn ()
  {
    return this->book_simpl_state_.book_->isbn ();
  }

  const ::library::title& book_simpl::
  title ()
  {
    return this->book_simpl_state_.book_->title ();
  }

  const ::library::genre& book_simpl::
  genre ()
  {
    return this->book_simpl_state_.book_->genre ();
  }

  bool book_simpl::
  author_next ()
  {
    return this->book_simpl_state_.author_ != 
    this->book_simpl_state_.author_end_;
  }

  const ::library::author& book_simpl::
  author ()
  {
    return *this->book_simpl_state_.author_++;
  }

  // catalog_simpl
  //

  void catalog_simpl::
  pre (const ::library::catalog& x)
  {
    this->catalog_simpl_state_.catalog_ = &x;
    this->catalog_simpl_state_.book_ = 
    this->catalog_simpl_state_.catalog_->book ().begin ();
    this->catalog_simpl_state_.book_end_ = 
    this->catalog_simpl_state_.catalog_->book ().end ();
  }

  bool catalog_simpl::
  book_next ()
  {
    return this->catalog_simpl_state_.book_ != 
    this->catalog_simpl_state_.book_end_;
  }

  const ::library::book& catalog_simpl::
  book ()
  {
    return *this->catalog_simpl_state_.book_++;
  }
}

namespace library
{
  // catalog_saggr
  //

  catalog_saggr::
  catalog_saggr ()
  {
    this->title_s_.serializers (this->string_s_);

    this->author_s_.serializers (this->string_s_,
                                 this->date_s_,
                                 this->date_s_);

    this->book_s_.serializers (this->boolean_s_,
                               this->isbn_s_,
                               this->title_s_,
                               this->genre_s_,
                               this->author_s_);

    this->catalog_s_.serializers (this->book_s_);
  }

  const char* catalog_saggr::
  root_name ()
  {
    return "catalog";
  }

  const char* catalog_saggr::
  root_namespace ()
  {
    return "http://www.codesynthesis.com/library";
  }
}

// Begin epilogue.
//
//
// End epilogue.

