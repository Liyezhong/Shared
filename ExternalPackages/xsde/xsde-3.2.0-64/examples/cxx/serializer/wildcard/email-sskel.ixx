// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

namespace email
{
  // binary_sskel
  //

  inline
  void binary_sskel::
  name_serializer (::xml_schema::string_sskel& name)
  {
    this->name_serializer_ = &name;
  }

  inline
  void binary_sskel::
  mime_serializer (::xml_schema::string_sskel& mime)
  {
    this->mime_serializer_ = &mime;
  }

  inline
  void binary_sskel::
  serializers (::xml_schema::string_sskel& name,
               ::xml_schema::string_sskel& mime)
  {
    this->name_serializer_ = &name;
    this->mime_serializer_ = &mime;
  }

  inline
  binary_sskel::
  binary_sskel (::xml_schema::base64_binary_sskel* tiein)
  : ::xml_schema::base64_binary_sskel (tiein, 0),
    binary_impl_ (0),
    name_serializer_ (0),
    mime_serializer_ (0)
  {
  }

  inline
  binary_sskel::
  binary_sskel (binary_sskel* impl, void*)
  : ::xml_schema::base64_binary_sskel (impl, 0),
    binary_impl_ (impl),
    name_serializer_ (0),
    mime_serializer_ (0)
  {
  }

  // envelope_sskel
  //

  inline
  void envelope_sskel::
  to_serializer (::xml_schema::string_sskel& s)
  {
    this->to_serializer_ = &s;
  }

  inline
  void envelope_sskel::
  from_serializer (::xml_schema::string_sskel& s)
  {
    this->from_serializer_ = &s;
  }

  inline
  void envelope_sskel::
  subject_serializer (::xml_schema::string_sskel& s)
  {
    this->subject_serializer_ = &s;
  }

  inline
  void envelope_sskel::
  serializers (::xml_schema::string_sskel& to,
               ::xml_schema::string_sskel& from,
               ::xml_schema::string_sskel& subject)
  {
    this->to_serializer_ = &to;
    this->from_serializer_ = &from;
    this->subject_serializer_ = &subject;
  }

  inline
  envelope_sskel::
  envelope_sskel ()
  : envelope_impl_ (0),
    to_serializer_ (0),
    from_serializer_ (0),
    subject_serializer_ (0)
  {
  }

  inline
  envelope_sskel::
  envelope_sskel (envelope_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    envelope_impl_ (impl),
    to_serializer_ (0),
    from_serializer_ (0),
    subject_serializer_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

