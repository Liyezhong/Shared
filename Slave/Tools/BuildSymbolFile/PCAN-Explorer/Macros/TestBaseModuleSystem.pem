'------------------------------------------------------------------------------
'FILE DESCRIPTION: Base module system message tests
'------------------------------------------------------------------------------

Private Sub includeFile (fSpec)
    Dim fileSys, file, fileData
    Set fileSys = createObject ("Scripting.FileSystemObject")
    Set file = fileSys.openTextFile (fSpec)
    fileData = file.readAll ()
    file.close
    executeGlobal fileData
    Set file = Nothing
    Set fileSys = Nothing
End Sub

includeFile "C:\svn\Colorado_Sepia\trunk\Platform\Slave\Tools\BuildSymbolFile\PCAN-Explorer\Macros\TestFramework.pem"

'*****************************************************************************/
'*  Testing Message SysAckHardwareID
'*****************************************************************************/
Private Sub SysAckHardwareID()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysAckHardwareID"
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "1"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute
End Sub   

'*****************************************************************************/
'*  Testing Message SysReqConfiguration
'*****************************************************************************/
Private Sub SysReqConfiguration()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysReqConfiguration"

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysConfiguration"
    Message2.AddData "ModuleID", 0
    Message2.AddData "Instance", 0
    Message2.AddData "ChannelID", 0
    Message2.AddData "ModuleVersion", 1
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "2"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute    
End Sub

'*****************************************************************************/
'*  Testing Message SysSetNodeState
'*****************************************************************************/
Private Sub SysSetNodeState()
' Set undefined state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 0

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8021)
    Message2.AddData "AddInfo", &H11

    Set TestStep1 = new TestStep
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    TestStep1.SetId "1"

' Set booting state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 1

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8016)
    Message2.AddData "AddInfo", 0
    
    Set Message3 = new CanMessage
    Message3.SetSymbol "MsgEventInfo"
    Message3.AddData "InfoCode", uHex16(&H8004)
    Message3.AddData "AddInfo", 0
    
    Set TestStep2 = new TestStep
    TestStep2.AddTxMessage Message1
    TestStep2.AddRxMessage Message2
    TestStep2.AddRxMessage Message3
    TestStep2.SetId "2"

' Set update state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 2

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8021)
    Message2.AddData "AddInfo", &H11

    Set TestStep3 = new TestStep
    TestStep3.AddTxMessage Message1
    TestStep3.AddRxMessage Message2
    TestStep3.SetId "3"

' Set startup state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 3

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8021)
    Message2.AddData "AddInfo", &H11

    Set TestStep4 = new TestStep
    TestStep4.AddTxMessage Message1
    TestStep4.AddRxMessage Message2
    TestStep4.SetId "4"

' Set identify state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 4

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysHardwareID"
    Message2.AddData "NodeClass", 0
    Message2.AddData "ProtocolVersion", 1
    Message2.AddData "HardwareVersion", 1
    Message2.AddData "SoftwareVersion", 1
    Message2.AddData "Channels", 1

    Set Message3 = new CanMessage
    Message3.SetSymbol "MsgSysAckHardwareID"

    Set Message4 = new CanMessage
    Message4.SetSymbol "MsgSysAckNodeState"
    Message4.AddData "Success", 1
    Message4.AddData "NodeState", 4

    Set TestStep5 = new TestStep
    TestStep5.AddTxMessage Message1
    TestStep5.AddRxMessage Message2
    TestStep5.AddTxMessage Message3
    TestStep5.AddRxMessage Message4
    TestStep5.SetId "5"

' Set normal state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 5

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysAckNodeState"
    Message2.AddData "Success", 1
    Message2.AddData "NodeState", 5

    Set TestStep6 = new TestStep
    TestStep6.AddTxMessage Message1
    TestStep6.AddRxMessage Message2
    TestStep6.SetId "6"

' Set service state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 6

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysAckNodeState"
    Message2.AddData "Success", 1
    Message2.AddData "NodeState", 6

    Set TestStep7 = new TestStep
    TestStep7.AddTxMessage Message1
    TestStep7.AddRxMessage Message2
    TestStep7.SetId "7"

' Set shutdown state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 7

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysAckNodeState"
    Message2.AddData "Success", 1
    Message2.AddData "NodeState", 7

    Set TestStep8 = new TestStep
    TestStep8.AddTxMessage Message1
    TestStep8.AddRxMessage Message2
    TestStep8.SetId "8"

' Set standby state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 8

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8021)
    Message2.AddData "AddInfo", &H11

    Set TestStep9 = new TestStep
    TestStep9.AddTxMessage Message1
    TestStep9.AddRxMessage Message2
    TestStep9.SetId "9"

' Set invalid state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 9

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8001)
    Message2.AddData "AddInfo", &H11

    Set TestStep10 = new TestStep
    TestStep10.AddTxMessage Message1
    TestStep10.AddRxMessage Message2
    TestStep10.SetId "10"

' Execute the test case
    Set TestCase1 = new TestCase
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.AddTestStep TestStep3
    TestCase1.AddTestStep TestStep4
    TestCase1.AddTestStep TestStep5
    TestCase1.AddTestStep TestStep7
    TestCase1.AddTestStep TestStep8
    TestCase1.AddTestStep TestStep6
    TestCase1.AddTestStep TestStep9
    TestCase1.AddTestStep TestStep10
    TestCase1.SetId "3"
    TestCase1.Execute    
End Sub

'*****************************************************************************/
'*  Testing Message SysReqNodeState
'*****************************************************************************/
Private Sub SysReqNodeState()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysReqNodeState"

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysNodeState"
    Message2.AddData "Busy", 0
    Message2.AddData "NodeState", 5
    Message2.AddData "PowerState", 0
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "4"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute 
End Sub

'*****************************************************************************/
'*  Testing Message SysRealTime
'*****************************************************************************/
Private Sub SysRealTime()
' Valid date
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysRealTime"
    Message1.AddData "Year", 2011
    Message1.AddData "Month", 2
    Message1.AddData "Day", 25
    Message1.AddData "Hour", 11
    Message1.AddData "Minute", 5
    Message1.AddData "Second", 47
    Message1.AddData "Millisec", 11
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1

' Invalid date
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysRealTime"
    Message1.AddData "Year", 2255
    Message1.AddData "Month", 13
    Message1.AddData "Day", 32
    Message1.AddData "Hour", 60
    Message1.AddData "Minute", 60
    Message1.AddData "Second", 60
    Message1.AddData "Millisec", 0

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8012)
    Message2.AddData "AddInfo", &H21
    
    Set TestStep2 = new TestStep
    TestStep2.SetId "2"
    TestStep2.AddTxMessage Message1
    TestStep2.AddRxMessage Message2

' Execute the test case    
    Set TestCase1 = new TestCase
    TestCase1.SetId "5"
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.Execute 
End Sub

'*****************************************************************************/
'*  Testing Message SysSystemClock
'*****************************************************************************/
Private Sub SysSystemClock()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSystemClock"
    Message1.AddData "Counter", 0
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
      
    Set TestCase1 = new TestCase
    TestCase1.SetId "6"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute     
End Sub

'*****************************************************************************/
'*  Testing Message SysCfgHeartBeat
'*****************************************************************************/
Private Sub SysCfgHeartBeat()
' Master heart beat
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysCfgHeartBeat"
    Message1.AddData "EnableSending", 0
    Message1.AddData "EnableCheck", 1
    Message1.AddData "Protection", 0
    Message1.AddData "Interval", 0
    Message1.AddData "Timeout", 1

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysNotStop"
    Message2.AddData "Active", 0
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddTxMessage Message2

' Slave heart beat
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysCfgHeartBeat"
    Message1.AddData "EnableSending", 1
    Message1.AddData "EnableCheck", 0
    Message1.AddData "Protection", 0
    Message1.AddData "Interval", 500
    Message1.AddData "Timeout", 0
 
    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysSlaveHeartBeat"

    Set Message3 = new CanMessage
    Message3.SetSymbol "MsgSysCfgHeartBeat"
    Message3.AddData "EnableSending", 0
    Message3.AddData "EnableCheck", 0
    Message3.AddData "Protection", 0
    Message3.AddData "Interval", 0
    Message3.AddData "Timeout", 0
    
    Set TestStep2 = new TestStep
    TestStep2.SetId "2"
    TestStep2.AddTxMessage Message1
    TestStep2.AddRxMessage Message2
    TestStep2.AddTxMessage Message3
    
' Execute the test case    
    Set TestCase1 = new TestCase
    TestCase1.SetId "7"
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.Execute 
End Sub

'*****************************************************************************/
'*  Testing Message SysNotStop
'*****************************************************************************/
Private Sub SysNotStop()
' Enter emergency stop state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysNotStop"
    Message1.AddData "Active", 1
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1

' Exit emergency stop state
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysNotStop"
    Message1.AddData "Active", 0
    
    Set TestStep2 = new TestStep
    TestStep2.SetId "2"
    TestStep2.AddTxMessage Message1
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "8"
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.Execute
End Sub

'*****************************************************************************/
'*  Testing Message SysMasterPower
'*****************************************************************************/
Private Sub SysMasterPower()
' Power unknown
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysMasterPower"
    Message1.AddData "PowerState", 9

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8001)
    Message2.AddData "AddInfo", &H49
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    
' Power fail
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysMasterPower"
    Message1.AddData "PowerState", 2
    
    Set TestStep2 = new TestStep
    TestStep2.SetId "2"
    TestStep2.AddTxMessage Message1
    
' Power warning
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysMasterPower"
    Message1.AddData "PowerState", 1
    
    Set TestStep3 = new TestStep
    TestStep3.SetId "3"
    TestStep3.AddTxMessage Message1
    
' Power ok
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysMasterPower"
    Message1.AddData "PowerState", 0
    
    Set TestStep4 = new TestStep
    TestStep4.SetId "4"
    TestStep4.AddTxMessage Message1
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "9"
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.AddTestStep TestStep3
    TestCase1.AddTestStep TestStep4
    TestCase1.Execute
End Sub

'*****************************************************************************/
'*  Testing Message SysNodeReset
'*****************************************************************************/
Private Sub SysNodeReset()
' Failed reset
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysNodeReset"
    Message1.AddData "Pattern", &H55

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysNodeReset"
    Message2.AddData "Pattern", &H77
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddTxMessage Message2

' Successful reset
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysNodeReset"
    Message1.AddData "Pattern", &H55

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgSysNodeReset"
    Message2.AddData "Pattern", &HE7

    Set Message3 = new CanMessage
    Message3.SetSymbol "MsgEventError"
    Message3.AddData "ErrorCode", uHex16(&H8016)
    Message3.AddData "AddInfo", 0
    
    Set Message4 = new CanMessage
    Message4.SetSymbol "MsgEventInfo"
    Message4.AddData "InfoCode", uHex16(&H8004)
    Message4.AddData "AddInfo", 0
    
    Set TestStep2 = new TestStep
    TestStep2.SetId "1"
    TestStep2.AddTxMessage Message1
    TestStep2.AddTxMessage Message2
    TestStep2.AddRxMessage Message3
    TestStep2.AddRxMessage Message4
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "10"
    TestCase1.AddTestStep TestStep1
    TestCase1.AddTestStep TestStep2
    TestCase1.Execute
End Sub

'*****************************************************************************/
'*  Testing Message ProcConfigure
'*****************************************************************************/
Private Sub ProcConfigure()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgProcConfigure@1"
    Message1.AddData "Mode", 3
    Message1.AddData "Interval", 0
    Message1.AddData "Threshold", 0

    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8013)
    Message2.AddData "AddInfo", &H1801
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "11"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute
End Sub

'*****************************************************************************/
'*  Testing Message ProcReqData
'*****************************************************************************/
Private Sub ProcReqData()
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgProcReqData@1"
    
    Set Message2 = new CanMessage
    Message2.SetSymbol "MsgEventError"
    Message2.AddData "ErrorCode", uHex16(&H8013)
    Message2.AddData "AddInfo", &H1809
    
    Set TestStep1 = new TestStep
    TestStep1.SetId "1"
    TestStep1.AddTxMessage Message1
    TestStep1.AddRxMessage Message2
    
    Set TestCase1 = new TestCase
    TestCase1.SetId "12"
    TestCase1.AddTestStep TestStep1
    TestCase1.Execute
End Sub

'*****************************************************************************/
'*  Entry function
'*****************************************************************************/
Sub StartBaseModuleSystemTests()
'DESCRIPTION: Starting the base module system message tests
    InitTests "Symbol File for Colorado", "ASB1"
    
    ' Initialize normal operation
    Set Message1 = new CanMessage
    Message1.SetSymbol "MsgSysSetNodeState"
    Message1.AddData "NodeState", 5
    Message1.Transmit
    
    SysAckHardwareID
    SysReqConfiguration
    SysSetNodeState
    SysReqNodeState
    SysRealTime
    SysSystemClock
    SysCfgHeartBeat
    SysNotStop
    SysMasterPower
    SysNodeReset
    ProcConfigure
    ProcReqData
        
    FinishTests
End Sub
